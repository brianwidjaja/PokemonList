{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brian\\\\OneDrive - University of Waterloo\\\\FE Practice copy\\\\Pokemon List\\\\PokemonList\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport PokemonList from \"./components/Pokemon/PokemonList\";\nimport NewPokemon from \"./components/NewPokemon/NewPokemon\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initial_party = [\n  // {\n  //   key: Math.random().toString(),\n  //   id: 448,\n  //   name: \"Lucario\",\n  //   hp: 126,\n  //   level: 35,\n  //   caughtDate: new Date(2022, 7, 14),\n  // },\n  // {\n  //   key: Math.random().toString(),\n  //   id: 350,\n  //   name: \"Milotic\",\n  //   hp: 148,\n  //   level: 36,\n  //   caughtDate: new Date(2023, 2, 12),\n  // },\n  // {\n  //   key: Math.random().toString(),\n  //   id: 257,\n  //   name: \"Blaziken\",\n  //   hp: 140,\n  //   level: 37,\n  //   caughtDate: new Date(2022, 2, 28),\n  // },\n  // {\n  //   key: Math.random().toString(),\n  //   id: 408,\n  //   name: \"Cranidos\",\n  //   hp: 95,\n  //   level: 26,\n  //   caughtDate: new Date(2022, 5, 12),\n  // },\n  // {\n  //   key: Math.random().toString(),\n  //   id: 150,\n  //   name: \"Mewtwo\",\n  //   hp: 269,\n  //   level: 64,\n  //   caughtDate: new Date(2022, 7, 14),\n  // },\n];\nconst App = () => {\n  _s();\n  const [party, setParty] = useState(initial_party);\n\n  //Handler - receive information from child component, variable in bracket is the value that is being passed from the child component to the parent\n  //Handler will be called in the return section --> the onMethod will be called by the child to pass the information to the parent\n  const addToPartyHandler = pokemon => {\n    setParty(prevParty => {\n      return [pokemon, ...prevParty];\n    });\n  };\n  const adjustLevel = (id, type) => {\n    const pokemon = party.find(item => item.id === id);\n    setParty(prevParty => {\n      console.log(pokemon);\n      return [{\n        ...pokemon,\n        level: type === \"increment\" ? pokemon.level === 100 ? pokemon.level += 0 : pokemon.level = pokemon.level + 1 : pokemon.level = pokemon.level - 1,\n        hp: type === \"increment\" ? pokemon.level === 100 ? pokemon.hp = pokemon.hp * 1 : (pokemon.hp *= 1.02).toFixed() : pokemon.hp *= 0.98\n      }, ...prevParty.filter(item => item.id !== id)];\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NewPokemon, {\n      onAddToParty: addToPartyHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PokemonList, {\n      partyList: party,\n      adjustLevel: adjustLevel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"LSFAeMd867VAWr3WMR+s9AXkkSM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["PokemonList","NewPokemon","React","useState","jsxDEV","_jsxDEV","initial_party","App","_s","party","setParty","addToPartyHandler","pokemon","prevParty","adjustLevel","id","type","find","item","console","log","level","hp","toFixed","filter","children","onAddToParty","fileName","_jsxFileName","lineNumber","columnNumber","partyList","_c","$RefreshReg$"],"sources":["C:/Users/brian/OneDrive - University of Waterloo/FE Practice copy/Pokemon List/PokemonList/src/App.js"],"sourcesContent":["import PokemonList from \"./components/Pokemon/PokemonList\";\r\nimport NewPokemon from \"./components/NewPokemon/NewPokemon\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst initial_party = [\r\n  // {\r\n  //   key: Math.random().toString(),\r\n  //   id: 448,\r\n  //   name: \"Lucario\",\r\n  //   hp: 126,\r\n  //   level: 35,\r\n  //   caughtDate: new Date(2022, 7, 14),\r\n  // },\r\n  // {\r\n  //   key: Math.random().toString(),\r\n  //   id: 350,\r\n  //   name: \"Milotic\",\r\n  //   hp: 148,\r\n  //   level: 36,\r\n  //   caughtDate: new Date(2023, 2, 12),\r\n  // },\r\n  // {\r\n  //   key: Math.random().toString(),\r\n  //   id: 257,\r\n  //   name: \"Blaziken\",\r\n  //   hp: 140,\r\n  //   level: 37,\r\n  //   caughtDate: new Date(2022, 2, 28),\r\n  // },\r\n  // {\r\n  //   key: Math.random().toString(),\r\n  //   id: 408,\r\n  //   name: \"Cranidos\",\r\n  //   hp: 95,\r\n  //   level: 26,\r\n  //   caughtDate: new Date(2022, 5, 12),\r\n  // },\r\n  // {\r\n  //   key: Math.random().toString(),\r\n  //   id: 150,\r\n  //   name: \"Mewtwo\",\r\n  //   hp: 269,\r\n  //   level: 64,\r\n  //   caughtDate: new Date(2022, 7, 14),\r\n  // },\r\n];\r\n\r\nconst App = () => {\r\n  const [party, setParty] = useState(initial_party);\r\n\r\n  //Handler - receive information from child component, variable in bracket is the value that is being passed from the child component to the parent\r\n  //Handler will be called in the return section --> the onMethod will be called by the child to pass the information to the parent\r\n  const addToPartyHandler = (pokemon) => {\r\n    setParty((prevParty) => {\r\n      return [pokemon, ...prevParty];\r\n    });\r\n  };\r\n\r\n  const adjustLevel = (id, type) => {\r\n    const pokemon = party.find((item) => item.id === id);\r\n    setParty((prevParty) => {\r\n      console.log(pokemon);\r\n      return [\r\n        {\r\n          ...pokemon,\r\n          level:\r\n            type === \"increment\"\r\n              ? pokemon.level === 100\r\n                ? (pokemon.level += 0)\r\n                : (pokemon.level = pokemon.level + 1)\r\n              : (pokemon.level = pokemon.level - 1),\r\n          hp:\r\n            type === \"increment\"\r\n              ? pokemon.level === 100\r\n                ? (pokemon.hp = pokemon.hp * 1)\r\n                : (pokemon.hp *= 1.02).toFixed()\r\n              : (pokemon.hp *= 0.98),\r\n        },\r\n        ...prevParty.filter((item) => item.id !== id),\r\n      ];\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <NewPokemon onAddToParty={addToPartyHandler}></NewPokemon>\r\n      <PokemonList partyList={party} adjustLevel={adjustLevel} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,WAAW,MAAM,kCAAkC;AAC1D,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAG;EACpB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAAA,CACD;AAED,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAACG,aAAa,CAAC;;EAEjD;EACA;EACA,MAAMK,iBAAiB,GAAIC,OAAO,IAAK;IACrCF,QAAQ,CAAEG,SAAS,IAAK;MACtB,OAAO,CAACD,OAAO,EAAE,GAAGC,SAAS,CAAC;IAChC,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,WAAW,GAAGA,CAACC,EAAE,EAAEC,IAAI,KAAK;IAChC,MAAMJ,OAAO,GAAGH,KAAK,CAACQ,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACH,EAAE,KAAKA,EAAE,CAAC;IACpDL,QAAQ,CAAEG,SAAS,IAAK;MACtBM,OAAO,CAACC,GAAG,CAACR,OAAO,CAAC;MACpB,OAAO,CACL;QACE,GAAGA,OAAO;QACVS,KAAK,EACHL,IAAI,KAAK,WAAW,GAChBJ,OAAO,CAACS,KAAK,KAAK,GAAG,GAClBT,OAAO,CAACS,KAAK,IAAI,CAAC,GAClBT,OAAO,CAACS,KAAK,GAAGT,OAAO,CAACS,KAAK,GAAG,CAAE,GACpCT,OAAO,CAACS,KAAK,GAAGT,OAAO,CAACS,KAAK,GAAG,CAAE;QACzCC,EAAE,EACAN,IAAI,KAAK,WAAW,GAChBJ,OAAO,CAACS,KAAK,KAAK,GAAG,GAClBT,OAAO,CAACU,EAAE,GAAGV,OAAO,CAACU,EAAE,GAAG,CAAC,GAC5B,CAACV,OAAO,CAACU,EAAE,IAAI,IAAI,EAAEC,OAAO,CAAC,CAAC,GAC/BX,OAAO,CAACU,EAAE,IAAI;MACvB,CAAC,EACD,GAAGT,SAAS,CAACW,MAAM,CAAEN,IAAI,IAAKA,IAAI,CAACH,EAAE,KAAKA,EAAE,CAAC,CAC9C;IACH,CAAC,CAAC;EACJ,CAAC;EACD,oBACEV,OAAA;IAAAoB,QAAA,gBACEpB,OAAA,CAACJ,UAAU;MAACyB,YAAY,EAAEf;IAAkB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,eAC1DzB,OAAA,CAACL,WAAW;MAAC+B,SAAS,EAAEtB,KAAM;MAACK,WAAW,EAAEA;IAAY;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEV,CAAC;AAACtB,EAAA,CAzCID,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AA2CT,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}